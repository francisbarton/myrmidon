% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/patch_join.R
\name{patch_join}
\alias{patch_join}
\title{A "patch join" or "coalesce join"}
\usage{
patch_join(dtf_x, dtf_y, patch_col)
}
\arguments{
\item{dtf_x}{A data frame. This contains a column with \code{NA} values that you
intend to replace with actual values where possible.}

\item{dtf_y}{A data frame. This contains a column with values that you intend
to use to replace the \code{NA}s in \code{dtf_x}}

\item{patch_col}{A string. This provides the name of the column which is to
be patched. Currently this needs to be present in \code{dtf_x} and \code{dtf_y} and
refer to the column to be patched and the column with the replacement values.
The column should be a vector column in both cases, and of the same \code{type}
otherwise coercion to the lower level type may occur.}
}
\value{
A tibble with the same column names and number of rows as \code{dtf_x}
}
\description{
This uses a column in one data frame (\code{dtf_y}) to patch \code{NA} values in
another data frame (\code{dtf_x}).
}
\details{
Currently the function is deliberately kept limited and simple. It could of
course be extended with further functionality (multiple patch columns,
patching from a column with a different name, replacing values more
generally not just NAs, specifying custom join_by (key) columns and so on).
But for now I just want to make a solid function that works and does this
one job well, without lots of risks or potential scope for data loss
disasters.

A further (deliberate) limitation of this function is that it expects a
one-to-one relationship between rows in \code{dtf_x} and \code{dtf_y}. This means that
\itemize{
\item Each row in x matches at most 1 row in y
\item Each row in y matches at most 1 row in x
}

(from the dplyr::left_join() help page).

This means that it will throw an error if \code{dtf_y} would provide multiple
matching rows for a row in \code{dtf_x}, creating additional rows in the output
tibble. I want to avoid that - I want
the patching to be precise: each NA can only be replaced by at most one
patch value.
}
